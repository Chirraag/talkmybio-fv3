import { z } from 'zod';

export const RetellWebhookSchema = z.object({
  call_type: z.string(),
  access_token: z.string(),
  call_id: z.string(),
  agent_id: z.string(),
  call_status: z.string(),
  metadata: z.record(z.unknown()),
  retell_llm_dynamic_variables: z.record(z.unknown()),
  opt_out_sensitive_data_storage: z.boolean(),
  start_timestamp: z.number(),
  end_timestamp: z.number(),
  transcript: z.string(),
  transcript_object: z.array(z.object({
    role: z.string(),
    content: z.string(),
    words: z.array(z.object({
      word: z.string(),
      start: z.number(),
      end: z.number(),
    })),
  })),
  recording_url: z.string().url(),
  public_log_url: z.string().url().optional(),
  latency: z.object({
    e2e: z.object({
      p50: z.number(),
      p90: z.number(),
      p95: z.number(),
      p99: z.number(),
      max: z.number(),
      min: z.number(),
      num: z.number(),
      values: z.array(z.number()),
    }),
    llm: z.object({
      p50: z.number(),
      p90: z.number(),
      p95: z.number(),
      p99: z.number(),
      max: z.number(),
      min: z.number(),
      num: z.number(),
      values: z.array(z.number()),
    }),
    llm_websocket_network_rtt: z.object({
      p50: z.number(),
      p90: z.number(),
      p95: z.number(),
      p99: z.number(),
      max: z.number(),
      min: z.number(),
      num: z.number(),
      values: z.array(z.number()),
    }),
    tts: z.object({
      p50: z.number(),
      p90: z.number(),
      p95: z.number(),
      p99: z.number(),
      max: z.number(),
      min: z.number(),
      num: z.number(),
      values: z.array(z.number()),
    }),
    knowledge_base: z.object({
      p50: z.number(),
      p90: z.number(),
      p95: z.number(),
      p99: z.number(),
      max: z.number(),
      min: z.number(),
      num: z.number(),
      values: z.array(z.number()),
    }),
    s2s: z.object({
      p50: z.number(),
      p90: z.number(),
      p95: z.number(),
      p99: z.number(),
      max: z.number(),
      min: z.number(),
      num: z.number(),
      values: z.array(z.number()),
    }),
  }),
  disconnection_reason: z.string(),
  call_analysis: z.object({
    call_summary: z.string(),
    in_voicemail: z.boolean(),
    user_sentiment: z.string(),
    call_successful: z.boolean(),
    custom_analysis_data: z.record(z.unknown()),
  }),
  call_cost: z.object({
    product_costs: z.array(z.object({
      product: z.string(),
      unitPrice: z.number(),
      cost: z.number(),
    })),
    total_duration_seconds: z.number(),
    total_duration_unit_price: z.number(),
    total_one_time_price: z.number(),
    combined_cost: z.number(),
  }),
});